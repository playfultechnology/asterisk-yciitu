; To create TTS recordings of each audio prompt:(https://text-to-speech-demo.ng.bluemix.net/)

; The correct path through the contexts is: 
; [Start] -> [A] -> [C] -> [B] -> [C] -> [D] -> [A] -> [Goal]

; This is the context in which all incoming calls are first placed - i.e. the game start
[yciitu-start]
exten => 1869,1,NoOp(Start!)
 ; Set global variable "from" to value "start"
 same => n,Set(GLOBAL(from)=start)
 same => n,Answer();
 same => n,Ringing()
 ; Wait a random amount of time before picking up
 same => n,Wait(${RAND(3,6)})
 ; Play introduction
 same => n,Playback(custom/yciitu/thankyou-for-calling-generic-megacorporation)
 same => n,Playback(custom/yciitu/your-call-is-important-to-us)
 same => n,Playback(custom/yciitu/this-call-may-be-monitored)
 same => n,Playback(custom/yciitu/please-wait-while-we-transfer-you-to&custom/yciitu/name-A)
 same => n,MusicOnHold(mohmp3, 5)
 ; Go to the "yciitu-A" context, "s" extension, and priority 1
 same => n,Goto(yciitu-A,s,1)

; This is the destination context - i.e. the game end
[yciitu-goal]
exten => s,1,NoOp(Goal!)
same => n,Playback(custom/yciitu/hello-youre-speaking-to-dave)
same => n,Record(/var/lib/asterisk/sounds/en/custom/yciitu/recordings/winner-%d.wav,1,3,q)
same => n,Playback(custom/yciitu/bear-with-me)
same => n,Playback(silence/9)
same => Hangup()

; Department A
[yciitu-A]
exten => s,1,NoOp("Entered A")
 same => n,Ringing()
 same => n,Wait(${RAND(1,5)})

 ; Play intro to this extension
 same => n,Playback(custom/yciitu/thankyou-for-calling)
 same => n,Playback(custom/yciitu/name-A)
 same => n,Playback(silence/1)
 same => n,Playback(custom/yciitu/please-hold-and-your-call-will-be-answered)
 same => n,MusicOnHold(mohmp3, 5)

 ; Win Condition Check
 same => n,GotoIf($["${from}"="D"]?yciitu-goal,s,1)

 ; The first time the message is played, use Playback() to prevent skipping, 
 ; because we haven't yet presented the choice of options
 same => n,Playback(custom/yciitu/all-operators-currently-busy)
 same => n,Playback(custom/yciitu/you-may-continue-to-hold-or)

 ; Goto appropriate label based on department from which user was transferred
 same => n(goto-from),NoOp()
 same => n,GotoIf($["${from}"="start"]?from-start)
 same => n,GotoIf($["${from}"="B"]?from-B)
 same => n,GotoIf($["${from}"="C"]?from-C)
 ; NOTE - THIS SHOULD NEVER HAPPEN!
 same => n,GotoIf($["${from}"="D"]?from-D)

 ; PRESENT USER CHOICES
 same => n(from-start),NoOp()
 same => n,Set(option-1-destination=B)
 same => n,Set(option-2-destination=C)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/press&custom/yciitu/1&custom/yciitu/to-be-transferred-to&custom/yciitu/name-B)
 same => n,Background(silence/1&custom/yciitu/or)
 same => n,Background(custom/yciitu/press&custom/yciitu/2&custom/yciitu/to-be-transferred-to&custom/yciitu/name-C)
 same => n,Goto(wait-for-input)

 same => n(from-B),NoOp()
 same => n,Set(option-1-destination=C)
 same => n,Set(option-2-destination=D)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-C&custom/yciitu/press&custom/yciitu/1)
 same => n,Background(custom/yciitu/or)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-D&custom/yciitu/press&custom/yciitu/2)
 same => n,Goto(wait-for-input)

 same => n(from-C),NoOp()
 same => n,Set(option-1-destination=B)
 same => n,Set(option-2-destination=D)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-B&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-D&custom/yciitu/please-press&custom/yciitu/2)
 same => n,Goto(wait-for-input)

 same => n(from-D),NoOp()
 same => n,Goto(yciitu-goal,s,1)

 ; WAIT FOR INPUT
 same => n(wait-for-input),NoOp(Waiting for input)
 ; Important! Use Background() rather than Playback() to enable keypress interruptions
 same => n,Background("custom/yciitu/on-hold-short")
 same => n,Background(custom/yciitu/all-operators-currently-busy)
 same => n,Background(custom/yciitu/you-may-continue-to-hold-or)
 same => n,Goto(goto-from)

 ; HANDLE INPUT
exten => 1,1,NoOp(Pressed 1)
 same => n,GotoIf($[${option-1-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=A)
 same => n,Goto(yciitu-${option-1-destination},s,1)
exten => 2,1,NoOp(Pressed 2)
 same => n,GotoIf($[${option-2-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=A)
 same => n,Goto(yciitu-${option-2-destination},s,1)
exten => 3,1,NoOp(Pressed 3)
 same => n,GotoIf($[${option-3-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=A)
 same => n,Goto(yciitu-${option-3-destination},s,1)
exten => i,1,NoOp(Invalid option selected)
 same => n,Goto(s,goto-from)



 [yciitu-B]
exten => s,1,NoOp("Entered B")
 same => n,Ringing()
 same => n,Wait(${RAND(1,5)})

  ; Play intro to this extension
 same => n,Playback(custom/yciitu/thankyou-for-calling)
 same => n,Playback(custom/yciitu/name-B)
 same => n,Playback(silence/1)
 same => n,Playback(custom/yciitu/please-hold-and-your-call-will-be-answered)
 same => n,Playback(custom/yciitu/on-hold-short)
 same => n,Playback(custom/yciitu/all-operators-currently-busy)
 same => n,Playback(custom/yciitu/you-may-continue-to-hold-or)

 ; Goto appropriate label based on department from which user was transferred
 same => n(goto-from),NoOp()
 same => n,GotoIf($["${from}"="A"]?from-A)
 same => n,GotoIf($["${from}"="C"]?from-C)
 same => n,GotoIf($["${from}"="D"]?from-D)

 ; PRESENT USER CHOICES
 same => n(from-A),NoOp()
 same => n,Set(option-1-destination=D)
 same => n,Set(option-2-destination=invalid)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-D&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Goto(wait-for-input)

 same => n(from-C),NoOp()
 same => n,Set(option-1-destination=D)
 same => n,Set(option-2-destination=A)
 same => n,Set(option-3-destination=C)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-D&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-A&custom/yciitu/please-press&custom/yciitu/2)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-C&custom/yciitu/please-press&custom/yciitu/3)
 same => n,Goto(wait-for-input)

 same => n(from-D),NoOp()
 same => n,Set(option-1-destination=A)
 same => n,Set(option-2-destination=invalid)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-A&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Goto(wait-for-input)

 ; WAIT FOR INPUT
 same => n(wait-for-input),NoOp(Waiting for input)
 same => n,Background("custom/yciitu/on-hold-short")
 same => n,Goto(goto-from)

 ; HANDLE INPUT
exten => 1,1,NoOp(Pressed 1)
 same => n,GotoIf($[${option-1-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=B)
 same => n,Goto(yciitu-${option-1-destination},s,1)
exten => 2,1,NoOp(Pressed 2)
 same => n,GotoIf($[${option-2-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=B)
 same => n,Goto(yciitu-${option-2-destination},s,1)
exten => 3,1,NoOp(Pressed 3)
 same => n,GotoIf($[${option-3-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=B)
 same => n,Goto(yciitu-${option-3-destination},s,1)
exten => i,1,NoOp(Invalid option selected)
 same => n,Goto(s,goto-from)




[yciitu-C]
exten => s,1,NoOp("Entered C")
 same => n,Ringing()
 same => n,Wait(${RAND(1,5)})

 ; Play intro to this extension
 same => n,Playback(custom/yciitu/thankyou-for-calling)
 same => n,Playback(custom/yciitu/name-C)
 same => n,Playback(silence/1)
 same => n,Playback(custom/yciitu/please-hold-and-your-call-will-be-answered)
 same => n,Playback(custom/yciitu/on-hold-short)
 same => n,Playback(custom/yciitu/all-operators-currently-busy)
 same => n,Playback(custom/yciitu/you-may-continue-to-hold-or)

 ; Goto appropriate label based on department from which user was transferred
 same => n(goto-from),NoOp()
 same => n,GotoIf($["${from}"="A"]?from-A)
 same => n,GotoIf($["${from}"="B"]?from-B)
 same => n,GotoIf($["${from}"="D"]?from-D)

 ; PRESENT USER CHOICES
 same => n(from-A),NoOp()
 same => n,Set(option-1-destination=B)
 same => n,Set(option-2-destination=invalid)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-B&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Goto(wait-for-input)

 same => n(from-B),NoOp()
 same => n,Set(option-1-destination=A)
 same => n,Set(option-2-destination=D)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-A&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-D&custom/yciitu/please-press&custom/yciitu/2)
 same => n,Goto(wait-for-input)

 same => n(from-D),NoOp()
 same => n,Set(option-1-destination=A)
 same => n,Set(option-2-destination=B)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-A&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-B&custom/yciitu/please-press&custom/yciitu/2)
 same => n,Goto(wait-for-input)

 ; WAIT FOR INPUT
 same => n(wait-for-input),NoOp(Waiting for input)
 same => n,Background(custom/yciitu/on-hold-short)
 same => n,Goto(goto-from)

 ; HANDLE INPUT
exten => 1,1,NoOp(Pressed 1)
 same => n,GotoIf($[${option-1-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=C)
 same => n,Goto(yciitu-${option-1-destination},s,1)
exten => 2,1,NoOp(Pressed 2)
 same => n,GotoIf($[${option-2-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=C)
 same => n,Goto(yciitu-${option-2-destination},s,1)
exten => 3,1,NoOp(Pressed 3)
 same => n,GotoIf($[${option-3-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=C)
 same => n,Goto(yciitu-${option-3-destination},s,1)
exten => i,1,NoOp(Invalid option selected)
 same => n,Goto(s,goto-from)




[yciitu-D]
exten => s,1,NoOp("Entered D")
 same => n,Ringing()
 same => n,Wait(${RAND(2,5)})

 ; Play intro to this extension
 same => n,Playback(custom/yciitu/thankyou-for-calling)
 same => n,Playback(custom/yciitu/name-D)
 same => n,Playback(silence/1)
 same => n,Playback(custom/yciitu/we-are-currently-experiencing-unusually-high)
 same => n,Playback(custom/yciitu/on-hold-short)
 same => n,Playback(custom/yciitu/all-operators-currently-busy)
 same => n,Playback(custom/yciitu/you-may-continue-to-hold-or)

 ; Goto appropriate label based on department from which user was transferred
 same => n(goto-from),NoOp()
 same => n,GotoIf($["${from}"="A"]?from-A)
 same => n,GotoIf($["${from}"="B"]?from-B)
 same => n,GotoIf($["${from}"="C"]?from-C)

 ; PRESENT USER CHOICES
 same => n(from-A),NoOp()
 same => n,Set(option-1-destination=B)
 same => n,Set(option-2-destination=C)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-B&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-C&custom/yciitu/please-press&custom/yciitu/2)
 same => n,Goto(wait-for-input)

 same => n(from-C),NoOp()
 same => n,Set(option-1-destination=B)
 same => n,Set(option-2-destination=A)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-B&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-A&custom/yciitu/please-press&custom/yciitu/2)
 same => n,Goto(wait-for-input)

 same => n(from-B),NoOp()
 same => n,Set(option-1-destination=B)
 same => n,Set(option-2-destination=C)
 same => n,Set(option-3-destination=invalid)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-B&custom/yciitu/please-press&custom/yciitu/1)
 same => n,Background(custom/yciitu/to-be-transferred-to&custom/yciitu/name-C&custom/yciitu/please-press&custom/yciitu/2)
 same => n,Goto(wait-for-input)

 ; WAIT FOR INPUT
 same => n(wait-for-input),NoOp(Waiting for input)
 same => n,Background(custom/yciitu/on-hold-short)
 same => n,Goto(goto-from)

 ; HANDLE INPUT
exten => 1,1,NoOp(Pressed 1)
 same => n,GotoIf($[${option-1-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=D)
 same => n,Goto(yciitu-${option-1-destination},s,1)
exten => 2,1,NoOp(Pressed 2)
 same => n,GotoIf($[${option-2-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=D)
 same => n,Goto(yciitu-${option-2-destination},s,1)
exten => 3,1,NoOp(Pressed 3)
 same => n,GotoIf($[${option-3-destination}=invalid]?i,1)
 same => n,Set(GLOBAL(from)=D)
 same => n,Goto(yciitu-${option-3-destination},s,1)
exten => i,1,NoOp(Invalid option selected)
 same => n,Goto(s,goto-from)